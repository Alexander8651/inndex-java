Index: app/src/main/java/com/inndex/car/personas/fragments/estaciones/EstacionesMapFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.inndex.car.personas.fragments.estaciones;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.location.Location;\r\nimport android.location.LocationManager;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.Settings;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport com.google.android.gms.common.api.Status;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.libraries.places.api.Places;\r\nimport com.google.android.libraries.places.api.model.Place;\r\nimport com.google.android.libraries.places.widget.AutocompleteSupportFragment;\r\nimport com.google.android.libraries.places.widget.listener.PlaceSelectionListener;\r\nimport com.google.android.material.bottomsheet.BottomSheetBehavior;\r\nimport com.google.gson.Gson;\r\nimport com.inndex.car.personas.R;\r\nimport com.inndex.car.personas.database.DataBaseHelper;\r\nimport com.inndex.car.personas.databinding.FragmentEstacionesMapBinding;\r\nimport com.inndex.car.personas.dto.distance.DistanceApiResponse;\r\nimport com.inndex.car.personas.enums.EEvents;\r\nimport com.inndex.car.personas.model.Estaciones;\r\nimport com.inndex.car.personas.retrofit.MedidorApiAdapter;\r\nimport com.inndex.car.personas.retrofit.distanceapi.DistanceApiAdapter;\r\nimport com.inndex.car.personas.services.ILocationService;\r\nimport com.inndex.car.personas.services.IMapService;\r\nimport com.inndex.car.personas.services.InndexLocationService;\r\nimport com.inndex.car.personas.services.MapService;\r\nimport com.inndex.car.personas.shared.SharedViewModel;\r\nimport com.inndex.car.personas.utils.Constantes;\r\nimport com.j256.ormlite.android.apptools.OpenHelperManager;\r\nimport com.j256.ormlite.dao.Dao;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\nimport static android.content.Context.MODE_PRIVATE;\r\n\r\npublic class EstacionesMapFragment extends Fragment implements OnMapReadyCallback, ILocationService, IMapService {\r\n\r\n    DrawerLayout drawer;\r\n    GoogleMap mMap;\r\n    private DataBaseHelper helper;\r\n    private MapService mapService;\r\n    private List<Estaciones> estaciones;\r\n    private InndexLocationService inndexLocationService;\r\n    private boolean myLocationZoomed;\r\n    private BottomSheetBehavior mBottomSheetBehavior;\r\n    boolean rutaTrazada;\r\n    private SharedPreferences sharedPreferences;\r\n    private SharedViewModel sharedViewModel;\r\n    private LatLng myLocation;\r\n    private Place selectedPlace;\r\n    float distancia;\r\n    private Estaciones estacionSeleccionada;\r\n\r\n    private FragmentEstacionesMapBinding binding;\r\n\r\n    public EstacionesMapFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    public static EstacionesMapFragment newInstance(String param1, String param2) {\r\n        EstacionesMapFragment fragment = new EstacionesMapFragment();\r\n        Bundle args = new Bundle();\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View v = inflater.inflate(R.layout.fragment_estaciones_map, container, false);\r\n\r\n        sharedPreferences = getActivity().getSharedPreferences(Constantes.SHARED_PREFERENCES_FILE_KEY, MODE_PRIVATE);\r\n        estaciones = new ArrayList<>();\r\n        //testDistanceApi();\r\n\r\n        double latitud = Double.parseDouble(sharedPreferences.getString(Constantes.LATITUD_KEY, \"0.0\"));\r\n        double longitud = Double.parseDouble(sharedPreferences.getString(Constantes.LONGITUD_KEY, \"0.0\"));\r\n\r\n        if (latitud != 0 && longitud != 0) {\r\n            myLocation = new LatLng(latitud, longitud);\r\n        }\r\n\r\n        drawer = getActivity().findViewById(R.id.drawer_layout);\r\n        helper = OpenHelperManager.getHelper(getActivity(), DataBaseHelper.class);\r\n\r\n\r\n        getAllStations();\r\n\r\n        inndexLocationService = new InndexLocationService(getActivity(), this, this);\r\n        //inndexLocationService.init();\r\n        checkGPSState();\r\n        View bottomSheet = v.findViewById(R.id.fl_estacion_detalle_container);\r\n        mBottomSheetBehavior = BottomSheetBehavior.from(bottomSheet);\r\n        mBottomSheetBehavior.setState(BottomSheetBehavior.STATE_DRAGGING);\r\n        mBottomSheetBehavior.setBottomSheetCallback(new BottomSheetBehavior.BottomSheetCallback() {\r\n            @Override\r\n            public void onStateChanged(@NonNull View view, int i) {\r\n                if (BottomSheetBehavior.STATE_COLLAPSED == i) {\r\n                    binding.fabUbicacion.show();\r\n                    //binding.fabNavegacion.hide();\r\n                    sharedViewModel.setEvents(EEvents.SHOW_ORIGINAL_MENU.getId());\r\n                } else if (BottomSheetBehavior.STATE_EXPANDED == i) {\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onSlide(@NonNull View view, float v) {\r\n\r\n            }\r\n        });\r\n        if (!Places.isInitialized()) {\r\n            Places.initialize(getActivity(), Constantes.API_KEY_PLACES, Locale.US);\r\n        }\r\n\r\n        AutocompleteSupportFragment autocompleteFragment = (AutocompleteSupportFragment)\r\n                getChildFragmentManager().findFragmentById(R.id.autocompleteFragment);\r\n        //EditText edtSearchPlaces = v.findViewById(R.id.editText_search);\r\n\r\n        if (autocompleteFragment != null) {\r\n            // Specify the types of place data to return.\r\n            autocompleteFragment.setPlaceFields(Arrays.asList(Place.Field.ID, Place.Field.NAME, Place.Field.LAT_LNG));\r\n            //autocompleteFragment.setHint(getString(R.string.a_donde_vas));\r\n\r\n            // Set up a PlaceSelectionListener to handle the response.\r\n            autocompleteFragment.setOnPlaceSelectedListener(new PlaceSelectionListener() {\r\n                @Override\r\n                public void onPlaceSelected(@NotNull Place place) {\r\n                    autocompleteFragment.setText(place.getName());\r\n                    selectedPlace = place;\r\n                    if (place.getLatLng() != null && mapService.getmMap() != null) {\r\n                        binding.fabNavegacion.show();\r\n                        mapService.mostrarUbicacionPlace(place.getLatLng(), place.getName());\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onError(@NotNull Status status) {\r\n                    // TODO: Handle the error.\r\n                    Log.i(\"PLACE\", \"An error occurred: \" + status);\r\n                }\r\n            });\r\n        }\r\n        return v;\r\n    }\r\n\r\n    private void testDistanceApi() {\r\n        Call<DistanceApiResponse> getDistance = DistanceApiAdapter.getApiService().getDistanceBetween(\"10.465923313985513,-73.24876001986274\",\r\n                \"10.448584597414639,-73.28423192393828\", Constantes.API_KEY_PLACES);\r\n        getDistance.enqueue(new Callback<DistanceApiResponse>() {\r\n            @Override\r\n            public void onResponse(Call<DistanceApiResponse> call, Response<DistanceApiResponse> response) {\r\n                Log.e(\"RESPONSE\", \"RES \" + response.code());\r\n                if (response.isSuccessful()) {\r\n                    DistanceApiResponse res = response.body();\r\n                    if (res != null)\r\n                        Log.e(\"DIS\", \"DISTANMCE IS \" + res.getDistanceValue());\r\n                    else\r\n                        Log.e(\"DIS\", \"SOMETHING HAPPEND\");\r\n\r\n                } else {\r\n                    Log.e(\"RESPONSE\", \"NOT SUCCESSFULL \" + response.code());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<DistanceApiResponse> call, Throwable t) {\r\n                Log.e(\"FAILURE\", \"EX \" + t.getMessage());\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n        binding = FragmentEstacionesMapBinding.bind(view);\r\n        binding.fabUbicacion.setOnClickListener(v -> mapService.mostrarUbicacion());\r\n        binding.fabNavegacion.setOnClickListener(v -> {\r\n            if (selectedPlace != null) {\r\n                gotToWaze(selectedPlace.getLatLng());\r\n            } else if (estacionSeleccionada != null) {\r\n                gotToWaze(estacionSeleccionada.getCoordenadas());\r\n            }\r\n        });\r\n        binding.btnMenu.setOnClickListener(c1 -> drawer.open());\r\n        SupportMapFragment mapFragment = (SupportMapFragment) getChildFragmentManager().findFragmentById(R.id.map1);\r\n        mapFragment.getMapAsync(this);\r\n    }\r\n\r\n    @Override\r\n    public void onMapReady(GoogleMap googleMap) {\r\n        mMap = googleMap;\r\n        mapService = new MapService(mMap, getContext(), this);\r\n        if (estaciones.size() > 0) {\r\n            initCluster();\r\n        }\r\n        if (inndexLocationService.getMyLocation() != null) {\r\n            mapService.setMyLocation(inndexLocationService.getMyLocation());\r\n            mapService.mostrarUbicacion();\r\n            myLocationZoomed = true;\r\n        } else if (myLocation != null) {\r\n            Location temp = new Location(LocationManager.GPS_PROVIDER);\r\n            temp.setLatitude(myLocation.latitude);\r\n            temp.setLongitude(myLocation.longitude);\r\n            mapService.setMyLocation(temp);\r\n            mapService.mostrarUbicacion();\r\n            myLocationZoomed = true;\r\n        }\r\n        sharedViewModel.setEvents(EEvents.ESTACIONES_MAP_FRAGMENT_VISIBLE.getId());\r\n        //LatLng newPosition = new LatLng(10.466294112577513, -73.25580205076582);\r\n        //googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(newPosition, 14));\r\n    }\r\n\r\n    @Override\r\n    public void onLocationChanged(Location location) {\r\n        if (location == null) {\r\n            Toast.makeText(getActivity(), \"LOCATION NULL\", Toast.LENGTH_SHORT).show();\r\n            return;\r\n        }\r\n\r\n        getAllStations();\r\n        this.mapService.setMyLocation(location);\r\n        this.myLocation = new LatLng(location.getLatitude(), location.getLongitude());\r\n        if (!myLocationZoomed) {\r\n            this.mapService.mostrarUbicacion();\r\n            myLocationZoomed = true;\r\n        }\r\n        if (location != null) {\r\n            SharedPreferences.Editor editor = sharedPreferences.edit();\r\n            editor.putString(Constantes.LATITUD_KEY, String.valueOf(location.getLatitude()));\r\n            editor.putString(Constantes.LONGITUD_KEY, String.valueOf(location.getLongitude()));\r\n            editor.apply();\r\n            editor.commit();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onEstacionMarkerClick(Estaciones estacion) {\r\n        if (this.myLocation == null) {\r\n            Toast.makeText(getActivity(), \"NO SE PUEDE DETERMINAR TU UBICACIÓN\", Toast.LENGTH_SHORT).show();\r\n            return;\r\n        }\r\n\r\n        if (estacion == null) {\r\n            Toast.makeText(getActivity(), \"Estacion nula\", Toast.LENGTH_SHORT).show();\r\n            return;\r\n        }\r\n\r\n        //this.myLocation = new LatLng(inndexLocationService.getMyLocation().getLatitude(), inndexLocationService.getMyLocation().getLongitude());\r\n\r\n        try {\r\n            String origins = this.myLocation.latitude + \",\" + this.myLocation.longitude;\r\n            String destination = estacion.getLatitud() + \",\" + estacion.getLongitud();\r\n\r\n            openStationBottomSheet(estacion);\r\n            //calculateDistance(origins, destination, estacion);\r\n\r\n        } catch (Exception ex) {\r\n            Toast.makeText(getActivity(), \"EXCEPTION \" + ex.getMessage(), Toast.LENGTH_SHORT).show();\r\n        }\r\n        //openStationBottomSheet(estacion);\r\n    }\r\n\r\n    private void calculateDistance(String origins, String destination, Estaciones estacion) {\r\n        Call<DistanceApiResponse> getDistance = DistanceApiAdapter.getApiService().getDistanceBetween(origins,\r\n                destination, Constantes.API_KEY_PLACES);\r\n        getDistance.enqueue(new Callback<DistanceApiResponse>() {\r\n            @Override\r\n            public void onResponse(Call<DistanceApiResponse> call, Response<DistanceApiResponse> response) {\r\n                if (response.isSuccessful()) {\r\n                    DistanceApiResponse res = response.body();\r\n                    if (res != null) {\r\n\r\n                        distancia = (float) res.getDistanceValue();\r\n                        openStationBottomSheet(estacion);\r\n                    }\r\n\r\n                } else {\r\n                    Log.e(\"RESPONSE\", \"NOT SUCCESSFULL \" + response.code());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<DistanceApiResponse> call, Throwable t) {\r\n                Log.e(\"FAILURE\", \"EX \" + t.getMessage());\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void openStationBottomSheet(Estaciones estacion) {\r\n        estacionSeleccionada = estacion;\r\n        Call<Estaciones> getEstacionById = MedidorApiAdapter.getApiService().getEstacionById(estacion.getId());\r\n        getEstacionById.enqueue(new Callback<Estaciones>() {\r\n            @Override\r\n            public void onResponse(Call<Estaciones> call, Response<Estaciones> response) {\r\n\r\n                if (response.isSuccessful()) {\r\n                    try {\r\n                        Estaciones estResponse = response.body();\r\n                        EstacionDetalleFragment miFragment = new EstacionDetalleFragment(estResponse, distancia, myLocation);\r\n                        //viewMap.setVisibility(View.GONE);\r\n                    /*LatLng myPosition = new LatLng(inndexLocationService.getMyLocation().getLatitude(),\r\n                            inndexLocationService.getMyLocation().getLongitude());*/\r\n                        //verServiciosButtonClicked = true;\r\n\r\n                        if (getActivity() != null) {\r\n                            getActivity().getSupportFragmentManager().beginTransaction().add(R.id.fl_estacion_detalle_container, miFragment).commit();\r\n                            mBottomSheetBehavior.setState(BottomSheetBehavior.STATE_HALF_EXPANDED);\r\n                            binding.fabUbicacion.hide();\r\n                            binding.fabNavegacion.hide();\r\n                            sharedViewModel.setEvents(EEvents.ESTACION_MARKER_SELECTED.getId());\r\n                        }\r\n                    } catch (Exception ex) {\r\n                        Toast.makeText(getActivity(), \"ERROR EX \" + ex.getMessage(), Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<Estaciones> call, Throwable t) {\r\n                Toast.makeText(getActivity(), \"estación \" + t.getMessage(), Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onRutaTrazada() {\r\n        rutaTrazada = true;\r\n    }\r\n\r\n    @Override\r\n    public void goToStreetView(String location) {\r\n        //46.414382,10.013988\r\n        Uri gmmIntentUri = Uri.parse(\"google.streetview:cbll=\" + location);\r\n\r\n// Create an Intent from gmmIntentUri. Set the action to ACTION_VIEW\r\n        Intent mapIntent = new Intent(Intent.ACTION_VIEW, gmmIntentUri);\r\n// Make the Intent explicit by setting the Google Maps package\r\n        mapIntent.setPackage(\"com.google.android.apps.maps\");\r\n\r\n// Attempt to start an activity that can handle the Intent\r\n        startActivity(mapIntent);\r\n    }\r\n\r\n    private void getAllStations() {\r\n        try {\r\n            final Dao<Estaciones, Integer> dao = helper.getDaoEstaciones();\r\n            if (!(estaciones.size() > 0)) {\r\n                estaciones = dao.queryForAll();\r\n            }\r\n            if (estaciones.size() > 0 || myLocation == null)\r\n                return;\r\n            Call<List<Estaciones>> callGetStations = MedidorApiAdapter.getApiService().getEstacionesNearUser(myLocation.latitude, myLocation.longitude);\r\n            callGetStations.enqueue(new Callback<List<Estaciones>>() {\r\n                @Override\r\n                public void onResponse(@NonNull Call<List<Estaciones>> call, @NonNull Response<List<Estaciones>> response) {\r\n                    if (response.isSuccessful()) {\r\n                        estaciones = response.body();\r\n                        Gson gson = new Gson();\r\n                        if (estaciones != null && estaciones.size() > 0) {\r\n                            for (int i = 0; i < estaciones.size(); i++) {\r\n                                estaciones.get(i).setJsonCombustibles(gson.toJson(estaciones.get(i).getListEstacionCombustibles()));\r\n                            }\r\n                            try {\r\n                                dao.create(estaciones);\r\n                                initCluster();\r\n                            } catch (SQLException e1) {\r\n                                Toast.makeText(getContext(), \"Error en la base de datos.\", Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        }\r\n                    } else {\r\n                        Toast.makeText(getContext(), \"NO SE PUDIERON DESCARGAR LAS ESTACIONES INTENTALO MAS TARDE.\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onFailure(@NonNull Call<List<Estaciones>> call, @NonNull Throwable t) {\r\n                    Toast.makeText(getContext(), \"NO SE PUDIERON DESCARGAR LAS ESTACIONES INTENTALO MAS TARDE.\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n\r\n        } catch (SQLException ex) {\r\n            Toast.makeText(getContext(), \"ERROR inicializando DAO.\", Toast.LENGTH_SHORT).show();\r\n        }\r\n\r\n    }\r\n\r\n    private void checkGPSState() {\r\n        if (!inndexLocationService.getLocationManager().isProviderEnabled(LocationManager.GPS_PROVIDER)) {\r\n            final AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n            builder.setMessage(\"El GPS esta desactivado\").setCancelable(false).setPositiveButton(\"Activar\", (dialog, which) -> {\r\n                Intent enableGPSIntent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);\r\n                startActivity(enableGPSIntent);\r\n            });\r\n            AlertDialog alert = builder.create();\r\n            alert.show();\r\n        }\r\n    }\r\n\r\n    private void gotToWaze(LatLng location) {\r\n        if (location != null) {\r\n            try {\r\n                Uri gmmIntentUri = Uri.parse(\"geo:0,0?q=\" + location.latitude + \",\" + location.longitude);\r\n                //Uri gmmIntentUri = Uri.parse(\"google.navigation:q=\" + estacionSeleccionada.getLatitud() + \",\" + estacionSeleccionada.getLongitud());\r\n                Intent intent = new Intent(Intent.ACTION_VIEW, gmmIntentUri);\r\n                startActivity(intent);\r\n            } catch (ActivityNotFoundException ex) {\r\n                // If Waze is not installed, open it in Google Play:\r\n                Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(\"market://details?id=com.waze\"));\r\n                startActivity(intent);\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onActivityCreated(@Nullable Bundle savedInstanceState) {\r\n        super.onActivityCreated(savedInstanceState);\r\n        sharedViewModel = new ViewModelProvider(getActivity()).get(SharedViewModel.class);\r\n\r\n        sharedViewModel.getHomeEvents().observe(getViewLifecycleOwner(), event -> {\r\n            switch (EEvents.getEventsById(event)) {\r\n                case NAVIGATE:\r\n                    LatLng latLng = new LatLng(estacionSeleccionada.getLatitud(), estacionSeleccionada.getLongitud());\r\n                    gotToWaze(latLng);\r\n                    break;\r\n                case DRAW_ROUTE:\r\n                    mBottomSheetBehavior.setState(BottomSheetBehavior.STATE_COLLAPSED);\r\n                    mapService.drawSationRoute();\r\n                    binding.fabNavegacion.show();\r\n                    break;\r\n                case BACK_BUTTON_PRESSED:\r\n                    this.selectedPlace = null;\r\n                    binding.fabNavegacion.hide();\r\n                    if (rutaTrazada) {\r\n                        mapService.deleteMapPolylines();\r\n                        rutaTrazada = false;\r\n                        mapService.mostrarUbicacion();\r\n                        sharedViewModel.setEvents(EEvents.SHOW_ORIGINAL_MENU.getId());\r\n                    } else if (mBottomSheetBehavior.getState() != BottomSheetBehavior.STATE_COLLAPSED) {\r\n                        mBottomSheetBehavior.setState(BottomSheetBehavior.STATE_COLLAPSED);\r\n                        sharedViewModel.setEvents(EEvents.SHOW_ORIGINAL_MENU.getId());\r\n                    } else {\r\n                        getActivity().finish();\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n\r\n    }\r\n\r\n    private void initCluster() {\r\n        mapService.setEstaciones(estaciones);\r\n        mapService.addStations();\r\n    }\r\n\r\n    @Override\r\n    public void onDestroyView() {\r\n        super.onDestroyView();\r\n        sharedViewModel.setEvents(EEvents.ESTACIONES_MAP_FRAGMENT_GONE.getId());\r\n    }\r\n\r\n    @Override\r\n    public void onDestroy() {\r\n        super.onDestroy();\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/inndex/car/personas/fragments/estaciones/EstacionesMapFragment.java	(revision dd2e051187126f47defb15b81a7dc75fd7312ce4)
+++ app/src/main/java/com/inndex/car/personas/fragments/estaciones/EstacionesMapFragment.java	(date 1614017272041)
@@ -318,7 +318,7 @@
             @Override
             public void onFailure(Call<DistanceApiResponse> call, Throwable t) {
                 Log.e("FAILURE", "EX " + t.getMessage());
-            }
+            }F
         });
 
     }
Index: app/src/main/java/com/inndex/car/personas/fragments/estaciones/admin/adapters/SegurosAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.inndex.car.personas.fragments.estaciones.admin.adapters;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.CheckBox;\r\nimport android.widget.RadioButton;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.inndex.car.personas.R;\r\nimport com.inndex.car.personas.model.Soat;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class SegurosAdapter extends RecyclerView.Adapter<SegurosAdapter.ViewHolder> {\r\n\r\n    ArrayList<Soat> soatService;\r\n    Soat soatEstacion;\r\n    ArrayList<Soat> soatEditado = new ArrayList<>();\r\n\r\n\r\n    public SegurosAdapter(ArrayList<Soat> soatService, Soat soatEstacion) {\r\n        this.soatService = soatService;\r\n        this.soatEstacion = soatEstacion;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public SegurosAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.itemcajero, parent, false);\r\n        return new ViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull SegurosAdapter.ViewHolder holder, int position) {\r\n\r\n        final Soat soat = soatService.get(position);\r\n        holder.soat.setText(soat.getNombre());\r\n\r\n\r\n\r\n        if (soatEstacion == null)\r\n            return;\r\n\r\n        Long idTienda = soatEstacion.getId();\r\n\r\n        if (soat.getId().equals(idTienda)) {\r\n            holder.checkBox.setChecked(true);\r\n            soatEditado.add(soat);\r\n        }\r\n\r\n\r\n        holder.checkBox.setOnClickListener(v -> {\r\n            if (holder.checkBox.isChecked()) {\r\n                soatEstacion.setNombre(soat.getNombre());\r\n                soatEstacion.setId(soat.getId());\r\n            }\r\n        });\r\n\r\n        holder.radioButton.setOnClickListener( v ->{\r\n            if (holder.checkBox.isChecked()) {\r\n                if (holder.checkBox.isChecked()) {\r\n                    soatEstacion.setNombre(soat.getNombre());\r\n                    soatEstacion.setId(soat.getId());\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return soatService.size();\r\n    }\r\n\r\n    public class ViewHolder extends RecyclerView.ViewHolder {\r\n\r\n        CheckBox checkBox;\r\n        TextView soat;\r\n        RadioButton radioButton;\r\n\r\n        public ViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n\r\n            checkBox = itemView.findViewById(R.id.checkboxBanco);\r\n            soat = itemView.findViewById(R.id.nombreBanco);\r\n            radioButton = itemView.findViewById(R.id.radiobuttonBanco);\r\n            \r\n            checkBox.setVisibility(View.GONE);\r\n            radioButton.setVisibility(View.VISIBLE);\r\n\r\n        }\r\n    }\r\n\r\n    public Soat obtenerSoat() {\r\n        return soatEstacion;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/inndex/car/personas/fragments/estaciones/admin/adapters/SegurosAdapter.java	(revision dd2e051187126f47defb15b81a7dc75fd7312ce4)
+++ app/src/main/java/com/inndex/car/personas/fragments/estaciones/admin/adapters/SegurosAdapter.java	(date 1614017000765)
@@ -88,7 +88,7 @@
             checkBox = itemView.findViewById(R.id.checkboxBanco);
             soat = itemView.findViewById(R.id.nombreBanco);
             radioButton = itemView.findViewById(R.id.radiobuttonBanco);
-            
+
             checkBox.setVisibility(View.GONE);
             radioButton.setVisibility(View.VISIBLE);
 
